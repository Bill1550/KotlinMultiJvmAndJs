
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "1.3.61"
}

apply plugin: 'kotlinx-serialization'

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}

def logback_version = '1.2.3'
def serialization_version = '0.14.0'


kotlin {

    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    js {
        browser {
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
                implementation "io.ktor:ktor-client-core:$ktor_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-serialization:$ktor_version"
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "io.ktor:ktor-client-json:$ktor_version"
                implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "io.ktor:ktor-client-apache:$ktor_version"
            }

            compileKotlinJvm {
                tasks.getByName( jvmProcessResources.name ) {
                    dependsOn( jsBrowserWebpack)
                    from( new File( jsBrowserWebpack.entry.name, jsBrowserWebpack.outputPath ) )
                }
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.3.3"
                implementation "io.ktor:ktor-client-js:$ktor_version"
                implementation "io.ktor:ktor-client-json:$ktor_version"
                implementation "io.ktor:ktor-client-serialization-js:$ktor_version"
                implementation npm("text-encoding", '0.7.0')
                implementation npm("text-encoding-utf-8", '1.0.2' )
                implementation npm("abort-controller", '3.0.0')
//                implementation "org.jetbrains.kotlinx:kotlinx-io-js:0.1.16"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

//jvmJar {
//    dependsOn(jsBrowserWebpack)
//    from(new File(jsBrowserWebpack.entry.name, jsBrowserWebpack.outputPath))
//}

task run(type: JavaExec, dependsOn: [jvmJar]) {
    group = "application"
    main = "sample.SampleJvmKt"
    classpath(configurations.jvmRuntimeClasspath, jvmJar)
    args = []
}